# Production Docker Compose
version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gujarati-translator-backend-prod
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=sqlite:///./data/app_data.db
      - CORS_ORIGINS=https://yourdomain.com,http://localhost
    volumes:
      - backend_data:/app/data
      - backend_models:/root/.cache/huggingface
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gujarati-translator-frontend-prod
    restart: always
    ports:
      - "443:80"
      - "80:80"
    environment:
      - REACT_APP_API_URL=https://yourdomain.com/api
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Reverse Proxy (Optional - for SSL termination)
  nginx:
    image: nginx:alpine
    container_name: gujarati-translator-nginx
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  backend_data:
    driver: local
  backend_models:
    driver: local